Version 3.2 HI-TECH Software Intermediate Code
[u S1 `uc -> 4 `i `c -> 4 `i `ui -> 2 `i `i -> 2 `i `ul 1 `l 1 ]
[n S1 LONG ub b ui i ul l ]
[s S3 `uc 1 `ui 1 `ui 1 `uc 1 `uc 1 `d 1 `d 1 `uc 1 `ui 1 `d 1 `d 1 `i 1 `ui 1 `ui 1 `d 1 `d 1 ]
[n S3 . Version BatteryLowVoltageLevel Battery12V_Q8 PowerResponseLimiter_Slope PowerResponseLimiter_Intercept Counts_per_Volt Volts_per_Count BacklightPWM_Duty BacklightIdleTimeout SystemAcceleration MaxSpeed PID_MaxError PID_Kp PID_Kd Counts_Per_Degree Degrees_Per_Count ]
[s S5 `uc 1 `ui 1 `uc 1 `uc 1 `ui 1 `i -> 18 `i `ui -> 18 `i `ui -> 19 `i ]
[n S5 . Type Origin_deg PointCount Bounce LoopCount Distances_deg TravelTimes_sec DwellTimes_sec ]
[s S4 `uc 1 `ui 1 `uc 1 `uc 1 `d 1 `d 1 `d 1 `d 1 `uc 1 ]
[n S4 . Type Origin_deg EndMode IsClockWise ProgramRunTime_sec CycleCount_rev CycleTime_sec Speed_deg_sec SpeedMode ]
"9 Z:\CineFlux\Dropbox\Orbit\UserInterface.h
[v _GetInput_nonblocking `(c ~T0 0 ef ]
"6 Z:\CineFlux\Dropbox\Orbit\lcd.h
[v _LCD_ClearDisplay `(v ~T0 0 ef ]
"1
[v _LCD_PrintString `(v ~T0 0 ef1`*Cuc ]
"9
[v _LCD_SetPosition `(v ~T0 0 ef2`uc`uc ]
"21 Z:\CineFlux\Dropbox\Orbit\UserInterface.h
[v _GetRotaryMultiplier `(uc ~T0 0 ef ]
"4 Z:\CineFlux\Dropbox\Orbit\lcd.h
[v _LCD_PrintFloat `(v ~T0 0 ef4`d`uc`uc`uc ]
"40 Z:\CineFlux\Dropbox\Orbit\main.h
[v _Idle `(v ~T0 0 ef ]
[; ;main.h: 7: typedef union LONG {
[; ;main.h: 8: unsigned char ub[4];
[; ;main.h: 9: signed char b[4];
[; ;main.h: 10: unsigned int ui[2];
[; ;main.h: 11: signed int i[2];
[; ;main.h: 12: unsigned long ul;
[; ;main.h: 13: signed long l;
[; ;main.h: 14: };
[; ;main.h: 16: typedef union {
[; ;main.h: 17: unsigned char ub[4];
[; ;main.h: 18: signed char b[4];
[; ;main.h: 19: unsigned int ui[2];
[; ;main.h: 20: signed int i[2];
[; ;main.h: 21: unsigned long ul;
[; ;main.h: 22: signed long l;
[; ;main.h: 23: float fl;
[; ;main.h: 24: double dbl;
[; ;main.h: 25: } MULTI;
[; ;main.h: 29: void main(void);
[; ;main.h: 30: void AckCmd(unsigned char CmdID);
[; ;main.h: 31: void NackCmd(unsigned char CmdID, unsigned char Reason);
[; ;main.h: 32: void MessageStream_WriteMULTI(MULTI dat, unsigned char CmdID);
[; ;main.h: 33: void MessageStream_WriteByte(unsigned char dat);
[; ;main.h: 34: unsigned char MessageStream_ReadByte();
[; ;main.h: 35: void GoToSleep();
[; ;main.h: 36: void SetupIO();
[; ;main.h: 37: void interrupt FastTick(void);
[; ;main.h: 38: void interrupt low_priority SlowTick();
[; ;main.h: 39: void SetupHardware();
[; ;main.h: 40: void Idle(void);
[; ;main.h: 41: double GetCurrentLinearPosition();
[; ;main.h: 42: double GetCurrentAngle();
"44 Z:\CineFlux\Dropbox\Orbit\main.h
[v _enc_states `Cc ~T0 -> 0 `x e ]
[i _enc_states
:U ..
-> -> 0 `i `c
-> -U -> 1 `i `c
-> -> 1 `i `c
-> -> 0 `i `c
-> -> 1 `i `c
-> -> 0 `i `c
-> -> 0 `i `c
-> -U -> 1 `i `c
-> -U -> 1 `i `c
-> -> 0 `i `c
-> -> 0 `i `c
-> -> 1 `i `c
-> -> 0 `i `c
-> -> 1 `i `c
-> -U -> 1 `i `c
-> -> 0 `i `c
..
]
[; ;main.h: 44: const signed char enc_states[] = {0, -1, 1, 0, 1, 0, 0, -1, -1, 0, 0, 1, 0, 1, -1, 0};
"49
[v _ReadIdx `uc ~T0 1 e ]
[i _ReadIdx
-> -> 0 `i `uc
]
[; ;main.h: 49: unsigned char ReadIdx = 0;
"50
[v _TX_Idx `Vuc ~T0 1 e ]
[i _TX_Idx
-> -> 0 `i `uc
]
[; ;main.h: 50: volatile unsigned char TX_Idx = 0;
"51
[v _TX_bCount `Vuc ~T0 1 e ]
[i _TX_bCount
-> -> 0 `i `uc
]
[; ;main.h: 51: volatile unsigned char TX_bCount = 0;
"52
[v _TXBuffer `Vuc ~T0 -> 255 `i e ]
[; ;main.h: 52: volatile unsigned char TXBuffer[255];
"53
[v _RX_MsgComplete `Vb ~T0 1 e ]
[; ;main.h: 53: volatile bit RX_MsgComplete;
"54
[v _RX_InProgress `Vb ~T0 1 e ]
[; ;main.h: 54: volatile bit RX_InProgress;
"55
[v _RX_Idx `Vuc ~T0 1 e ]
[i _RX_Idx
-> -> 0 `i `uc
]
[; ;main.h: 55: volatile unsigned char RX_Idx = 0;
"56
[v _RXBuffer `Vuc ~T0 -> 255 `i e ]
[; ;main.h: 56: volatile unsigned char RXBuffer[255];
"57
[v _MyID `Vuc ~T0 1 e ]
[i _MyID
-> -> 170 `i `uc
]
[; ;main.h: 57: volatile unsigned char MyID = 0xAA;
"58
[v _isPendingExternalUIEvent `Vb ~T0 1 e ]
[; ;main.h: 58: volatile bit isPendingExternalUIEvent;
"59
[v _PendingExternalUIEvent `Vuc ~T0 1 e ]
[; ;main.h: 59: volatile char PendingExternalUIEvent;
"60
[v _ExtModeActive `Vb ~T0 1 e ]
[; ;main.h: 60: volatile bit ExtModeActive;
"65
[v _ClearUI_Event `Vb ~T0 1 e ]
[i _ClearUI_Event
-> 0 `i
]
[; ;main.h: 65: volatile bit ClearUI_Event = 0;
"66
[v _bLock_RotaryDetentIntervals `Vb ~T0 1 e ]
[i _bLock_RotaryDetentIntervals
-> 0 `i
]
[; ;main.h: 66: volatile bit bLock_RotaryDetentIntervals = 0;
"67
[v _RotaryDetentIntervals `uc ~T0 -> 16 `i e ]
[; ;main.h: 67: unsigned char RotaryDetentIntervals[16];
"68
[v _ZeroRotaryDetentIntervals `Vb ~T0 1 e ]
[i _ZeroRotaryDetentIntervals
-> 0 `i
]
[; ;main.h: 68: volatile bit ZeroRotaryDetentIntervals = 0;
"69
[v _bLock_UI_Event `Vb ~T0 1 e ]
[i _bLock_UI_Event
-> 0 `i
]
[; ;main.h: 69: volatile bit bLock_UI_Event = 0;
"70
[v _UI_Event `Vuc ~T0 1 e ]
[; ;main.h: 70: volatile char UI_Event;
"83
[v _bLock_BatteryVoltage `Vb ~T0 1 e ]
[i _bLock_BatteryVoltage
-> 0 `i
]
[; ;main.h: 83: volatile bit bLock_BatteryVoltage = 0;
"84
[v _BatteryVoltage `ui ~T0 1 e ]
[i _BatteryVoltage
-> -> 0 `i `ui
]
[; ;main.h: 84: unsigned int BatteryVoltage = 0;
"85
[v _bLowVoltageTrip `Vb ~T0 1 e ]
[i _bLowVoltageTrip
-> 0 `i
]
[; ;main.h: 85: volatile bit bLowVoltageTrip = 0;
"88
[v _LCD_BacklightEnabled `Vb ~T0 1 e ]
[; ;main.h: 88: volatile bit LCD_BacklightEnabled;
"91
[v _bFollowMode `Vb ~T0 1 e ]
[i _bFollowMode
-> 0 `i
]
[; ;main.h: 91: volatile bit bFollowMode = 0;
"92
[v _bMove_InProgress `Vb ~T0 1 e ]
[i _bMove_InProgress
-> 0 `i
]
[; ;main.h: 92: volatile bit bMove_InProgress = 0;
"93
[v _Move_speedQ24 `ul ~T0 1 e ]
[i _Move_speedQ24
-> -> -> 0 `i `l `ul
]
[; ;main.h: 93: unsigned long Move_speedQ24 = 0;
"94
[v _Move_shifted_position `S1 ~T0 1 e ]
[; ;main.h: 94: union LONG Move_shifted_position;
"95
[v _Move_position `S1 ~T0 -> 2 `i e ]
[; ;main.h: 95: union LONG Move_position[2];
"96
[v _Move_AccelValueQ24 `ul ~T0 1 e ]
[i _Move_AccelValueQ24
-> -> -> 0 `i `l `ul
]
[; ;main.h: 96: unsigned long Move_AccelValueQ24 = 0;
"97
[v _Move_CoastSpeedQ24 `ul ~T0 1 e ]
[i _Move_CoastSpeedQ24
-> -> -> 0 `i `l `ul
]
[; ;main.h: 97: unsigned long Move_CoastSpeedQ24 = 0;
"98
[v _Move_DecelPosition `ul ~T0 1 e ]
[i _Move_DecelPosition
-> -> -> 0 `i `l `ul
]
[; ;main.h: 98: unsigned long Move_DecelPosition = 0;
"99
[v _Move_FinalPosition `l ~T0 1 e ]
[i _Move_FinalPosition
-> -> 0 `i `l
]
[; ;main.h: 99: signed long Move_FinalPosition = 0;
"100
[v _Move_Origin `l ~T0 1 e ]
[i _Move_Origin
-> -> 0 `i `l
]
[; ;main.h: 100: signed long Move_Origin = 0;
"101
[v _bMove_Neg `Vb ~T0 1 e ]
[i _bMove_Neg
-> 0 `i
]
[; ;main.h: 101: volatile bit bMove_Neg = 0;
"105
[v _bSpeedMode `Vb ~T0 1 e ]
[i _bSpeedMode
-> 0 `i
]
[; ;main.h: 105: volatile bit bSpeedMode = 0;
"106
[v _Speed_SetToThis `ul ~T0 1 e ]
[; ;main.h: 106: unsigned long Speed_SetToThis;
"107
[v _Speed_SetPending `Vb ~T0 1 e ]
[; ;main.h: 107: volatile bit Speed_SetPending;
"108
[v _Speed_IsAccelerating `Vb ~T0 1 e ]
[; ;main.h: 108: volatile bit Speed_IsAccelerating;
"112
[v _bClear_MotorPosition `Vb ~T0 1 e ]
[i _bClear_MotorPosition
-> 0 `i
]
[; ;main.h: 112: volatile bit bClear_MotorPosition = 0;
"113
[v _Motor_Position `l ~T0 1 e ]
[i _Motor_Position
-> -> 0 `i `l
]
[; ;main.h: 113: signed long Motor_Position = 0;
"114
[v _bLock_Motor_Position `Vb ~T0 1 e ]
[i _bLock_Motor_Position
-> 0 `i
]
[; ;main.h: 114: volatile bit bLock_Motor_Position = 0;
"117
[v _bIncrement_PID_Setpoint `Vb ~T0 1 e ]
[i _bIncrement_PID_Setpoint
-> 0 `i
]
[; ;main.h: 117: volatile bit bIncrement_PID_Setpoint = 0;
"118
[v _bDecrement_PID_Setpoint `Vb ~T0 1 e ]
[i _bDecrement_PID_Setpoint
-> 0 `i
]
[; ;main.h: 118: volatile bit bDecrement_PID_Setpoint = 0;
"119
[v _bLock_PID_SetPoint `Vb ~T0 1 e ]
[i _bLock_PID_SetPoint
-> 0 `i
]
[; ;main.h: 119: volatile bit bLock_PID_SetPoint = 0;
"121
[v _bMotionError `Vb ~T0 1 e ]
[i _bMotionError
-> 0 `i
]
[; ;main.h: 121: volatile bit bMotionError = 0;
"122
[v _bPowerOff `Vb ~T0 1 e ]
[i _bPowerOff
-> 0 `i
]
[; ;main.h: 122: volatile bit bPowerOff = 0;
"181
[v _ASCII_HEX_TO_BINARY `Cuc ~T0 -> 128 `i e ]
[i _ASCII_HEX_TO_BINARY
:U ..
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"182
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"183
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"184
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 2 `i `uc
-> -> 3 `i `uc
-> -> 4 `i `uc
-> -> 5 `i `uc
-> -> 6 `i `uc
-> -> 7 `i `uc
-> -> 8 `i `uc
-> -> 9 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"185
-> -> 0 `i `uc
-> -> 10 `i `uc
-> -> 11 `i `uc
-> -> 12 `i `uc
-> -> 13 `i `uc
-> -> 14 `i `uc
-> -> 15 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"186
-> -> 0 `i `uc
-> -> 10 `i `uc
-> -> 11 `i `uc
-> -> 12 `i `uc
-> -> 13 `i `uc
-> -> 14 `i `uc
-> -> 15 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
]
[; ;main.h: 181: const unsigned char ASCII_HEX_TO_BINARY[128] ={0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
[; ;main.h: 182: 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
[; ;main.h: 183: 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
[; ;main.h: 184: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 0,
[; ;main.h: 185: 0, 10, 11, 12, 13, 14, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0,
[; ;main.h: 186: 0, 10, 11, 12, 13, 14, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0};
"188
[v _BINARY_TO_ASCII_HEX `Cuc ~T0 -> 16 `i e ]
[i _BINARY_TO_ASCII_HEX
:U ..
-> -> 48 `ui `uc
-> -> 49 `ui `uc
-> -> 50 `ui `uc
-> -> 51 `ui `uc
-> -> 52 `ui `uc
-> -> 53 `ui `uc
-> -> 54 `ui `uc
-> -> 55 `ui `uc
-> -> 56 `ui `uc
-> -> 57 `ui `uc
-> -> 65 `ui `uc
-> -> 66 `ui `uc
-> -> 67 `ui `uc
-> -> 68 `ui `uc
-> -> 69 `ui `uc
-> -> 70 `ui `uc
..
]
[; ;main.h: 188: const unsigned char BINARY_TO_ASCII_HEX[16] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};
[; ;UserInterface.h: 4: void ShowVoltage();
[; ;UserInterface.h: 5: signed char GetClick(void);
[; ;UserInterface.h: 6: signed char GetYesNo(const char *prompt, signed char Initial);
[; ;UserInterface.h: 7: signed char GetFloat(const char *prompt, const char *unit, double* Value, double Min, double Max, double Precision);
[; ;UserInterface.h: 8: signed char GetInput(void);
[; ;UserInterface.h: 9: signed char GetInput_nonblocking(void);
[; ;UserInterface.h: 10: signed char DisplayMenu(const char *Menu[], char ItemCount, char Initial);
[; ;UserInterface.h: 11: signed char DisplayChoices(const char *Menu[], char ItemCount, const char *Prompt, char Initial);
[; ;UserInterface.h: 12: signed char GetPresetNumber();
[; ;UserInterface.h: 14: signed char GetTime(const char *prompt, double *Time, double Min, double Max, char Precision);
[; ;UserInterface.h: 15: void PrintTime(double dat, unsigned char precision, unsigned char EditChevron);
[; ;UserInterface.h: 16: void ConvertTimeToDiscrete(double Time, char *Hours, char *Minutes, char *Seconds, int *Milliseconds);
[; ;UserInterface.h: 17: double ConvertTimeFromDiscrete(char Hours, char Minutes, char Seconds, int Milliseconds);
[; ;UserInterface.h: 18: double RoundTimeUp(double Time,unsigned char precision);
[; ;UserInterface.h: 19: double RoundTimeDown(double Time,unsigned char precision);
[; ;UserInterface.h: 21: unsigned char GetRotaryMultiplier();
[; ;lcd.h: 1: void LCD_PrintString(const unsigned char *dat);
[; ;lcd.h: 2: void LCD_PrintChar(char dat);
[; ;lcd.h: 3: void LCD_PrintLong(long dat, char places, char sign);
[; ;lcd.h: 4: void LCD_PrintFloat(double dat, char whole, char fract, char sign);
[; ;lcd.h: 6: void LCD_ClearDisplay(void);
[; ;lcd.h: 7: void LCD_PowerUp(void);
[; ;lcd.h: 9: void LCD_SetPosition(char Row, char Col);
[; ;lcd.h: 10: void LCD_FunctionSet(char EightBit, char DualLine, char FiveByTenDots);
[; ;lcd.h: 11: void LCD_CursorShift(char ShiftDisplay, char ShiftRight);
[; ;lcd.h: 12: void LCD_DisplayOnOff(char DisplayOn, char CursorOn, char BlinkOn);
[; ;lcd.h: 13: void LCD_EntryModeSet(char Increment, char ShiftOn);
[; ;lcd.h: 14: void LCD_ReturnHome(void);
[; ;lcd.h: 16: void putc(unsigned char dat);
"18 Z:\CineFlux\Dropbox\Orbit\lcd.h
[v _LCD_Line1 `uc ~T0 -> 20 `i e ]
[; ;lcd.h: 18: unsigned char LCD_Line1[20];
"19
[v _LCD_Line2 `uc ~T0 -> 20 `i e ]
[; ;lcd.h: 19: unsigned char LCD_Line2[20];
"20
[v _LCD_Row `uc ~T0 1 e ]
[i _LCD_Row
-> -> 0 `i `uc
]
[; ;lcd.h: 20: unsigned char LCD_Row=0;
"21
[v _LCD_Col `uc ~T0 1 e ]
[i _LCD_Col
-> -> 0 `i `uc
]
[; ;lcd.h: 21: unsigned char LCD_Col=0;
[; ;settings.h: 2: typedef struct {
[; ;settings.h: 3: unsigned char Version;
[; ;settings.h: 4: unsigned int BatteryLowVoltageLevel;
[; ;settings.h: 5: unsigned int Battery12V_Q8;
[; ;settings.h: 6: unsigned char PowerResponseLimiter_Slope;
[; ;settings.h: 7: unsigned char PowerResponseLimiter_Intercept;
[; ;settings.h: 8: double Counts_per_Volt;
[; ;settings.h: 9: double Volts_per_Count;
[; ;settings.h: 10: unsigned char BacklightPWM_Duty;
[; ;settings.h: 11: unsigned int BacklightIdleTimeout;
[; ;settings.h: 12: double SystemAcceleration;
[; ;settings.h: 13: double MaxSpeed;
[; ;settings.h: 14: signed int PID_MaxError;
[; ;settings.h: 15: unsigned int PID_Kp;
[; ;settings.h: 16: unsigned int PID_Kd;
[; ;settings.h: 17: double Counts_Per_Degree;
[; ;settings.h: 18: double Degrees_Per_Count;
[; ;settings.h: 19: } ConfigStruct;
[; ;settings.h: 21: typedef struct {
[; ;settings.h: 22: char Type;
[; ;settings.h: 23: unsigned int Origin_deg;
[; ;settings.h: 24: char EndMode;
[; ;settings.h: 25: char IsClockWise;
[; ;settings.h: 26: double ProgramRunTime_sec;
[; ;settings.h: 27: double CycleCount_rev;
[; ;settings.h: 28: double CycleTime_sec;
[; ;settings.h: 29: double Speed_deg_sec;
[; ;settings.h: 30: char SpeedMode;
[; ;settings.h: 31: } OrbitProgramStruct;
[; ;settings.h: 33: typedef struct {
[; ;settings.h: 34: char Type;
[; ;settings.h: 35: unsigned int Origin_deg;
[; ;settings.h: 36: unsigned char PointCount;
[; ;settings.h: 37: unsigned char Bounce;
[; ;settings.h: 38: unsigned int LoopCount;
[; ;settings.h: 39: signed int Distances_deg[18];
[; ;settings.h: 40: unsigned int TravelTimes_sec[18];
[; ;settings.h: 41: unsigned int DwellTimes_sec[19];
[; ;settings.h: 42: } WaypointProgramStruct;
[; ;settings.h: 44: typedef union {
[; ;settings.h: 45: unsigned char ub[120];
[; ;settings.h: 46: WaypointProgramStruct WayPoint;
[; ;settings.h: 47: OrbitProgramStruct Orbit;
[; ;settings.h: 48: } PRESET;
"50 Z:\CineFlux\Dropbox\Orbit\settings.h
[v _Config `S3 ~T0 1 e ]
[; ;settings.h: 50: ConfigStruct Config;
"51
[v _CurrentPath `S5 ~T0 1 e ]
[; ;settings.h: 51: WaypointProgramStruct CurrentPath;
"52
[v _CurrentOrbitProgram `S4 ~T0 1 e ]
[; ;settings.h: 52: OrbitProgramStruct CurrentOrbitProgram;
[; ;settings.h: 54: void FactoryDefault();
[; ;settings.h: 55: void SaveSettings();
[; ;settings.h: 56: void LoadSettings();
[; ;settings.h: 57: void EEprom_write(unsigned int *addr, unsigned char *dat, unsigned char bCount);
[; ;settings.h: 58: void EEprom_read(unsigned int *addr, unsigned char *dat, unsigned char bCount);
[; ;settings.h: 59: unsigned char GetPresetType(char pnum);
[; ;settings.h: 60: void SavePreset(char pnum, unsigned char *dat);
[; ;settings.h: 61: void LoadPreset(char pnum, unsigned char *dat);
[; ;RealtimeMode.h: 1: void RealtimeMode();
"7 Z:\CineFlux\Dropbox\Orbit\RealtimeMode.c
[v _RealtimeMode `(v ~T0 1 ef ]
{
[; ;RealtimeMode.c: 7: void RealtimeMode() {
[e :U _RealtimeMode ]
[f ]
"8
[v _SetSpeed `d ~T0 1 a ]
[; ;RealtimeMode.c: 8: double SetSpeed = 0;
[e = _SetSpeed -> -> 0 `i `d ]
"10
[v _ret `c ~T0 1 a ]
[; ;RealtimeMode.c: 10: signed char ret;
[; ;RealtimeMode.c: 12: bLock_Motor_Position = 1;
"12
[e = _bLock_Motor_Position -> -> 1 `i `b ]
[; ;RealtimeMode.c: 13: Move_Origin = Motor_Position;
"13
[e = _Move_Origin _Motor_Position ]
[; ;RealtimeMode.c: 14: bLock_Motor_Position = 0;
"14
[e = _bLock_Motor_Position -> -> 0 `i `b ]
[; ;RealtimeMode.c: 17: Move_AccelValueQ24 = (unsigned long) (180 * Config.Counts_Per_Degree * 67.1088640);
"17
[e = _Move_AccelValueQ24 -> * * -> -> 180 `i `d . _Config 14 .67.1088640 `ul ]
[; ;RealtimeMode.c: 20: Move_shifted_position.ul = 0;
"20
[e = . _Move_shifted_position 4 -> -> -> 0 `i `l `ul ]
[; ;RealtimeMode.c: 21: Move_speedQ24 = 0;
"21
[e = _Move_speedQ24 -> -> -> 0 `i `l `ul ]
[; ;RealtimeMode.c: 22: Move_position[0].ul = 0;
"22
[e = . *U + &U _Move_position * -> -> -> 0 `i `ui `ux -> -> # *U &U _Move_position `ui `ux 4 -> -> -> 0 `i `l `ul ]
[; ;RealtimeMode.c: 23: Move_position[1].ul = 0;
"23
[e = . *U + &U _Move_position * -> -> -> 1 `i `ui `ux -> -> # *U &U _Move_position `ui `ux 4 -> -> -> 0 `i `l `ul ]
[; ;RealtimeMode.c: 24: bFollowMode=0;
"24
[e = _bFollowMode -> -> 0 `i `b ]
[; ;RealtimeMode.c: 25: bMove_InProgress=0;
"25
[e = _bMove_InProgress -> -> 0 `i `b ]
[; ;RealtimeMode.c: 26: bSpeedMode = 1;
"26
[e = _bSpeedMode -> -> 1 `i `b ]
[; ;RealtimeMode.c: 27: bSpeedMode = 1;
"27
[e = _bSpeedMode -> -> 1 `i `b ]
[; ;RealtimeMode.c: 29: ret = GetInput_nonblocking();
"29
[e = _ret ( _GetInput_nonblocking ..  ]
[; ;RealtimeMode.c: 30: LCD_ClearDisplay();
"30
[e ( _LCD_ClearDisplay ..  ]
[; ;RealtimeMode.c: 31: LCD_PrintString("REALTIME MODE\0");
"31
[e ( _LCD_PrintString (1 :s 1C ]
[; ;RealtimeMode.c: 32: LCD_SetPosition(1, 0);
"32
[e ( _LCD_SetPosition (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
[; ;RealtimeMode.c: 33: LCD_PrintString("SPEED: XX.XX\xDF/Sec\0");
"33
[e ( _LCD_PrintString (1 :s 2C ]
[; ;RealtimeMode.c: 35: while (1) {
"35
[e :U 9 ]
{
[; ;RealtimeMode.c: 36: ret = GetInput_nonblocking();
"36
[e = _ret ( _GetInput_nonblocking ..  ]
[; ;RealtimeMode.c: 37: if (ret == 3) goto labelExit;
"37
[e $ ! == -> _ret `i -> 3 `i 11  ]
[e $U 12  ]
[e :U 11 ]
[; ;RealtimeMode.c: 38: if (ret == 2) goto labelExit;
"38
[e $ ! == -> _ret `i -> 2 `i 13  ]
[e $U 12  ]
[e :U 13 ]
[; ;RealtimeMode.c: 39: if (ret == 1) SetSpeed = 0;
"39
[e $ ! == -> _ret `i -> 1 `i 14  ]
[e = _SetSpeed -> -> 0 `i `d ]
[e :U 14 ]
[; ;RealtimeMode.c: 40: if (ret == 4) {
"40
[e $ ! == -> _ret `i -> 4 `i 15  ]
{
[; ;RealtimeMode.c: 41: SetSpeed += GetRotaryMultiplier() * 0.05;
"41
[e =+ _SetSpeed * -> ( _GetRotaryMultiplier ..  `d .0.05 ]
[; ;RealtimeMode.c: 42: if (SetSpeed > 90) SetSpeed = 90;
"42
[e $ ! > _SetSpeed -> -> 90 `i `d 16  ]
[e = _SetSpeed -> -> 90 `i `d ]
[e :U 16 ]
"43
}
[e :U 15 ]
[; ;RealtimeMode.c: 43: }
[; ;RealtimeMode.c: 44: if (ret == 5) {
"44
[e $ ! == -> _ret `i -> 5 `i 17  ]
{
[; ;RealtimeMode.c: 45: SetSpeed -= GetRotaryMultiplier() * 0.05;
"45
[e =- _SetSpeed * -> ( _GetRotaryMultiplier ..  `d .0.05 ]
[; ;RealtimeMode.c: 46: if (SetSpeed<-90) SetSpeed = -90;
"46
[e $ ! < _SetSpeed -> -U -> 90 `i `d 18  ]
[e = _SetSpeed -> -U -> 90 `i `d ]
[e :U 18 ]
"47
}
[e :U 17 ]
[; ;RealtimeMode.c: 47: }
[; ;RealtimeMode.c: 49: LCD_SetPosition(1, 6);
"49
[e ( _LCD_SetPosition (2 , -> -> 1 `i `uc -> -> 6 `i `uc ]
[; ;RealtimeMode.c: 51: LCD_PrintFloat(SetSpeed, 2, 2, 1);
"51
[e ( _LCD_PrintFloat (4 , , , _SetSpeed -> -> 2 `i `uc -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;RealtimeMode.c: 54: if (bMove_Neg) {
"54
[e $ ! _bMove_Neg 19  ]
{
[; ;RealtimeMode.c: 55: if (SetSpeed < 0) {
"55
[e $ ! < _SetSpeed -> -> 0 `i `d 20  ]
{
[; ;RealtimeMode.c: 56: Speed_SetToThis = (unsigned long) (-SetSpeed * Config.Counts_Per_Degree * 33554.4320);
"56
[e = _Speed_SetToThis -> * * -U _SetSpeed . _Config 14 .33554.4320 `ul ]
[; ;RealtimeMode.c: 57: Speed_SetPending = 1;
"57
[e = _Speed_SetPending -> -> 1 `i `b ]
[; ;RealtimeMode.c: 58: while (Speed_SetPending) Idle();
"58
[e $U 21  ]
[e :U 22 ]
[e ( _Idle ..  ]
[e :U 21 ]
[e $ _Speed_SetPending 22  ]
[e :U 23 ]
"59
}
[; ;RealtimeMode.c: 59: } else if (SetSpeed > 0) {
[e $U 24  ]
[e :U 20 ]
[e $ ! > _SetSpeed -> -> 0 `i `d 25  ]
{
[; ;RealtimeMode.c: 60: Speed_SetToThis = 1;
"60
[e = _Speed_SetToThis -> -> -> 1 `i `l `ul ]
[; ;RealtimeMode.c: 61: Speed_SetPending = 1;
"61
[e = _Speed_SetPending -> -> 1 `i `b ]
[; ;RealtimeMode.c: 62: while (Speed_SetPending) Idle();
"62
[e $U 26  ]
[e :U 27 ]
[e ( _Idle ..  ]
[e :U 26 ]
[e $ _Speed_SetPending 27  ]
[e :U 28 ]
[; ;RealtimeMode.c: 63: if (!Speed_IsAccelerating) {
"63
[e $ ! ! _Speed_IsAccelerating 29  ]
{
[; ;RealtimeMode.c: 64: bSpeedMode = 0;
"64
[e = _bSpeedMode -> -> 0 `i `b ]
[; ;RealtimeMode.c: 65: bSpeedMode = 0;
"65
[e = _bSpeedMode -> -> 0 `i `b ]
[; ;RealtimeMode.c: 66: Move_shifted_position.ul = 0;
"66
[e = . _Move_shifted_position 4 -> -> -> 0 `i `l `ul ]
[; ;RealtimeMode.c: 67: Move_speedQ24 = 0;
"67
[e = _Move_speedQ24 -> -> -> 0 `i `l `ul ]
[; ;RealtimeMode.c: 68: Move_position[0].ul = 0;
"68
[e = . *U + &U _Move_position * -> -> -> 0 `i `ui `ux -> -> # *U &U _Move_position `ui `ux 4 -> -> -> 0 `i `l `ul ]
[; ;RealtimeMode.c: 69: Move_position[1].ul = 0;
"69
[e = . *U + &U _Move_position * -> -> -> 1 `i `ui `ux -> -> # *U &U _Move_position `ui `ux 4 -> -> -> 0 `i `l `ul ]
[; ;RealtimeMode.c: 71: bMove_Neg = 0;
"71
[e = _bMove_Neg -> -> 0 `i `b ]
[; ;RealtimeMode.c: 72: bLock_Motor_Position = 1;
"72
[e = _bLock_Motor_Position -> -> 1 `i `b ]
[; ;RealtimeMode.c: 73: Move_Origin = Motor_Position;
"73
[e = _Move_Origin _Motor_Position ]
[; ;RealtimeMode.c: 74: bLock_Motor_Position = 0;
"74
[e = _bLock_Motor_Position -> -> 0 `i `b ]
[; ;RealtimeMode.c: 75: bSpeedMode = 1;
"75
[e = _bSpeedMode -> -> 1 `i `b ]
[; ;RealtimeMode.c: 76: bSpeedMode = 1;
"76
[e = _bSpeedMode -> -> 1 `i `b ]
"77
}
[e :U 29 ]
"78
}
[; ;RealtimeMode.c: 77: }
[; ;RealtimeMode.c: 78: } else {
[e $U 30  ]
[e :U 25 ]
{
[; ;RealtimeMode.c: 79: Speed_SetToThis = 1;
"79
[e = _Speed_SetToThis -> -> -> 1 `i `l `ul ]
[; ;RealtimeMode.c: 80: Speed_SetPending = 1;
"80
[e = _Speed_SetPending -> -> 1 `i `b ]
[; ;RealtimeMode.c: 81: while (Speed_SetPending) Idle();
"81
[e $U 31  ]
[e :U 32 ]
[e ( _Idle ..  ]
[e :U 31 ]
[e $ _Speed_SetPending 32  ]
[e :U 33 ]
"82
}
[e :U 30 ]
[e :U 24 ]
"83
}
[; ;RealtimeMode.c: 82: }
[; ;RealtimeMode.c: 83: } else {
[e $U 34  ]
[e :U 19 ]
{
[; ;RealtimeMode.c: 84: if (SetSpeed > 0) {
"84
[e $ ! > _SetSpeed -> -> 0 `i `d 35  ]
{
[; ;RealtimeMode.c: 85: Speed_SetToThis = (unsigned long) (SetSpeed * Config.Counts_Per_Degree * 33554.4320);
"85
[e = _Speed_SetToThis -> * * _SetSpeed . _Config 14 .33554.4320 `ul ]
[; ;RealtimeMode.c: 86: Speed_SetPending = 1;
"86
[e = _Speed_SetPending -> -> 1 `i `b ]
[; ;RealtimeMode.c: 87: while (Speed_SetPending) Idle();
"87
[e $U 36  ]
[e :U 37 ]
[e ( _Idle ..  ]
[e :U 36 ]
[e $ _Speed_SetPending 37  ]
[e :U 38 ]
"88
}
[; ;RealtimeMode.c: 88: } else if (SetSpeed < 0) {
[e $U 39  ]
[e :U 35 ]
[e $ ! < _SetSpeed -> -> 0 `i `d 40  ]
{
[; ;RealtimeMode.c: 89: Speed_SetToThis = 1;
"89
[e = _Speed_SetToThis -> -> -> 1 `i `l `ul ]
[; ;RealtimeMode.c: 90: Speed_SetPending = 1;
"90
[e = _Speed_SetPending -> -> 1 `i `b ]
[; ;RealtimeMode.c: 91: while (Speed_SetPending) Idle();
"91
[e $U 41  ]
[e :U 42 ]
[e ( _Idle ..  ]
[e :U 41 ]
[e $ _Speed_SetPending 42  ]
[e :U 43 ]
[; ;RealtimeMode.c: 93: if (!Speed_IsAccelerating) {
"93
[e $ ! ! _Speed_IsAccelerating 44  ]
{
[; ;RealtimeMode.c: 94: bSpeedMode = 0;
"94
[e = _bSpeedMode -> -> 0 `i `b ]
[; ;RealtimeMode.c: 95: bSpeedMode = 0;
"95
[e = _bSpeedMode -> -> 0 `i `b ]
[; ;RealtimeMode.c: 96: Move_shifted_position.ul = 0;
"96
[e = . _Move_shifted_position 4 -> -> -> 0 `i `l `ul ]
[; ;RealtimeMode.c: 97: Move_speedQ24 = 0;
"97
[e = _Move_speedQ24 -> -> -> 0 `i `l `ul ]
[; ;RealtimeMode.c: 98: Move_position[0].ul = 0;
"98
[e = . *U + &U _Move_position * -> -> -> 0 `i `ui `ux -> -> # *U &U _Move_position `ui `ux 4 -> -> -> 0 `i `l `ul ]
[; ;RealtimeMode.c: 99: Move_position[1].ul = 0;
"99
[e = . *U + &U _Move_position * -> -> -> 1 `i `ui `ux -> -> # *U &U _Move_position `ui `ux 4 -> -> -> 0 `i `l `ul ]
[; ;RealtimeMode.c: 100: bMove_Neg = 1;
"100
[e = _bMove_Neg -> -> 1 `i `b ]
[; ;RealtimeMode.c: 101: bLock_Motor_Position = 1;
"101
[e = _bLock_Motor_Position -> -> 1 `i `b ]
[; ;RealtimeMode.c: 102: Move_Origin = Motor_Position;
"102
[e = _Move_Origin _Motor_Position ]
[; ;RealtimeMode.c: 103: bLock_Motor_Position = 0;
"103
[e = _bLock_Motor_Position -> -> 0 `i `b ]
[; ;RealtimeMode.c: 104: bSpeedMode = 1;
"104
[e = _bSpeedMode -> -> 1 `i `b ]
[; ;RealtimeMode.c: 105: bSpeedMode = 1;
"105
[e = _bSpeedMode -> -> 1 `i `b ]
"106
}
[e :U 44 ]
"107
}
[; ;RealtimeMode.c: 106: }
[; ;RealtimeMode.c: 107: } else {
[e $U 45  ]
[e :U 40 ]
{
[; ;RealtimeMode.c: 108: Speed_SetToThis = 1;
"108
[e = _Speed_SetToThis -> -> -> 1 `i `l `ul ]
[; ;RealtimeMode.c: 109: Speed_SetPending = 1;
"109
[e = _Speed_SetPending -> -> 1 `i `b ]
[; ;RealtimeMode.c: 110: while (Speed_SetPending) Idle();
"110
[e $U 46  ]
[e :U 47 ]
[e ( _Idle ..  ]
[e :U 46 ]
[e $ _Speed_SetPending 47  ]
[e :U 48 ]
"111
}
[e :U 45 ]
[e :U 39 ]
"112
}
[e :U 34 ]
[; ;RealtimeMode.c: 111: }
[; ;RealtimeMode.c: 112: }
[; ;RealtimeMode.c: 114: Idle();
"114
[e ( _Idle ..  ]
"116
}
[e :U 8 ]
"35
[e $U 9  ]
[e :U 10 ]
[; ;RealtimeMode.c: 116: }
[; ;RealtimeMode.c: 117: labelExit:
"117
[e :U 12 ]
[; ;RealtimeMode.c: 119: LCD_ClearDisplay();
"119
[e ( _LCD_ClearDisplay ..  ]
[; ;RealtimeMode.c: 120: LCD_PrintString("STOPPING...\0");
"120
[e ( _LCD_PrintString (1 :s 3C ]
[; ;RealtimeMode.c: 121: while (1) {
"121
[e :U 50 ]
{
[; ;RealtimeMode.c: 122: Speed_SetToThis = 1;
"122
[e = _Speed_SetToThis -> -> -> 1 `i `l `ul ]
[; ;RealtimeMode.c: 123: Speed_SetPending = 1;
"123
[e = _Speed_SetPending -> -> 1 `i `b ]
[; ;RealtimeMode.c: 124: while (Speed_SetPending) Idle();
"124
[e $U 52  ]
[e :U 53 ]
[e ( _Idle ..  ]
[e :U 52 ]
[e $ _Speed_SetPending 53  ]
[e :U 54 ]
[; ;RealtimeMode.c: 125: if (!Speed_IsAccelerating) {
"125
[e $ ! ! _Speed_IsAccelerating 55  ]
{
[; ;RealtimeMode.c: 126: bSpeedMode = 0;
"126
[e = _bSpeedMode -> -> 0 `i `b ]
[; ;RealtimeMode.c: 127: bSpeedMode = 0;
"127
[e = _bSpeedMode -> -> 0 `i `b ]
[; ;RealtimeMode.c: 128: return;
"128
[e $UE 7  ]
"129
}
[e :U 55 ]
[; ;RealtimeMode.c: 129: }
[; ;RealtimeMode.c: 130: Idle();
"130
[e ( _Idle ..  ]
"131
}
[e :U 49 ]
"121
[e $U 50  ]
[e :U 51 ]
[; ;RealtimeMode.c: 131: }
[; ;RealtimeMode.c: 134: }
"134
[e :UE 7 ]
}
[a 2C 83 80 69 69 68 58 32 88 88 46 88 88 223 47 83 101 99 0 0 ]
[a 1C 82 69 65 76 84 73 77 69 32 77 79 68 69 0 0 ]
[a 3C 83 84 79 80 80 73 78 71 46 46 46 0 0 ]
